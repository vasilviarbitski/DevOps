def retFull() {
    def file = readFile '/var/lib/jenkins/workspace/gradle4/gradle/gradle.properties'
    def lines = file.readLines()
    def vers = lines[1].tokenize('=')
    def subvers = lines[2].tokenize('=')
    def fullvers = vers[1]+"."+subvers[1]
    return fullvers
}
      
node('master'){
    stage('Pull from git'){
        git 'https://github.com/vasilviarbitski/DevOps'
    }
    stage('Build war'){
        dir('gradle') {
            sh './gradlew build'
        }
    }
    stage('Stash war file'){
        dir('gradle/build/libs'){
            def fullvers = retFull()
            println 'Stash file version : '+fullvers
            stash includes: "build##-${fullvers}.war", name: 'warfile'
        }
    }
    stage('Push version to git'){
        dir ('gradle'){
            sh 'gradle versionUpdate'  
            sh 'git config --global user.name "Your Name"'    
            sh 'git config --global user.email "vverbitskii@gmail.com"'
            sh 'git add gradle.properties'
            withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'git', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {
                sh('git commit -m "version change"')
                sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/vasilviarbitski/DevOps.git master')
            }
        }
    }
}
node('tomcat'){
    stage('Upload to tomcat'){
        dir ('/var/lib/tomcat/webapps/'){    
            unstash 'warfile'
        }
    }
    stage('HTTP request'){
        sh 'sleep 10'
        def req = httpRequest 'http://10.0.0.11:8080/build/'
        println req
    }
}

