def retFull () {
    def file = readFile '/var/lib/jenkins/workspace/gradle4/gradle/gradle.properties'
    def lines = file.readLines()
    def vers = lines[1].tokenize('=')
    def subvers = lines[2].tokenize('=')
    def fullvers = vers[1]+"."+subvers[1]
    return fullvers
}
node('master'){
    stage('Pull from git'){
        git 'https://github.com/vasilviarbitski/DevOps'
    }
    stage('Build war'){
        dir('gradle') {
            sh './gradlew build'
        }
    }
    stage('Stash war file'){
        dir('gradle/build/libs'){
            def fullvers = retFull()
            sh "echo ${fullvers} > vers.txt"
            def tomFullVers = fullvers.replace(".", "")
            println 'Stash file name : '+"build##${tomFullVers}.war"
            stash includes: "build##${tomFullVers}.war, vers.txt", name: 'warfile'
        }
    }
    stage('Push version to git'){
        dir ('gradle'){
            sh './gradlew versionUpdate'  
            sh 'git config --global user.name "Your Name"'    
            sh 'git config --global user.email "vverbitskii@gmail.com"'
            sh 'git add gradle.properties'
            def fullvers = retFull()
            withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'git', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {
                sh("git commit -m 'version changed to ${fullvers}'")
                sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/vasilviarbitski/DevOps.git master')
            }
        }
    }
}
node('tomcat'){
    stage('Upload to tomcat'){
//        dir ('/var/lib/tomcat/webapps/'){    
            unstash 'warfile'
            sh 'cp *.war /var/lib/tomcat/webapps'
//        }
    }
    stage('Delete older builds'){
        sh 'cd /var/lib/tomcat/webapps/ &&  ls -t build##*.war | tail -n +5 | xargs rm -rf'
    }
    stage('HTTP request'){
        sleep 8
        def req = httpRequest 'http://10.0.0.11:8080/build/'
        def verify = (req.content).find('[0-9].[0-9]*')
        println verify 
        def  verifyHome = sh 'cat vers.txt'
        println verifyHome
    }
}

